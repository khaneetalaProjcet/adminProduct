import{ab as i,ac as c,ad as o,aJ as p}from"./index-YxbGW_Kj.js";import{S as r}from"./api-kDFbBZn5.js";const a=c(),t=i.create({baseURL:"https://gateway.khanetala.ir/v1/secondmain",headers:{"Content-Type":"application/json",Accept:"application/json","Content-Security-Policy":"default-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'","X-Content-Type-Options":"nosniff","Referrer-Policy":"strict-origin-when-cross-origin"}});t.interceptors.request.use(e=>{const s=localStorage.getItem("token");return s?e.headers.Authorization=`Bearer ${s}`:a.replace("/login"),e},e=>Promise.reject(e));t.interceptors.response.use(e=>e,e=>(e.response.status==401&&(localStorage.removeItem("token"),a.replace("/login")),console.error("API Error:",e.response||e.message),Promise.reject(e)));const d={async sendOtp(e){const s=JSON.stringify({phoneNumber:e});return(await t.post("/otp",s)).data},async submitOtp(e){const s=JSON.stringify(e);return(await t.post("/inperson/otp/verify",s)).data},async identityUser(e){console.log(e);const s=JSON.stringify({phoneNumber:e.phoneNumber,nationalCode:e.nationalCode,birthDate:e.birthDate,id:e.id});return(await t.post("/inperson/user/identity",s)).data},async CreateBuy(e){const s=JSON.stringify(e);return(await t.post("/inperson/buy/create",s)).data},async CreateSell(e){const s=JSON.stringify(e);return(await t.post("/inperson/sell/create",s)).data},async InPersonBuy(e){return(await o.get(`/inperson/buy/all/${e}`)).data},async InPersonSell(e){return(await o.get(`/inperson/sell/all/${e}`)).data},async SubmitInPersonBuy(e){const s=JSON.stringify({status:e.status,id:e.id,description:e.description});return(await t.post("/inperson/transaction/changestatus",s)).data},async SubmitConvertTrade(e){const s=JSON.stringify(e);return(await t.post("/inperson/convert/create",s)).data},async SubmitPayment(e,s){const n=JSON.stringify(e);return(await t.post(`/inperson/convert/payment/${s}`,n)).data},async SubmitCounterPayment(e){const s=JSON.stringify(e);return(await r.post("/branch/transAction/admin/create",s)).data},async approveCounterPayment(e){const s=JSON.stringify({transActionId:e});return(await r.post("/branch/transAction/admin/verify",s)).data},async SubmitCounterWithdraw(e){const s=JSON.stringify(e);return(await t.post("/inperson/withdraw",s)).data},async SubmitFilterInvoice(e){const s=JSON.stringify(e);return(await p.post("/report/analyze/report/invoice",s)).data},async GetBranches(){return(await r.get("/branch/all")).data},async GetSellers(e){return(await r.get(`/branch/seller/all/${e}`)).data}};export{d as I};
